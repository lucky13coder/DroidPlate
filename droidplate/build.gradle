apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for secret builds, public betas, etc.

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", project.KEY_DEV, project.VAL_DEV
        buildConfigField "String", project.KEY_GIT_SHA, "\"${gitSha}\""
        buildConfigField "String", project.KEY_BUILD_TIME, "\"${buildTime}\""
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            debuggable false
            // RELEASE: use proguard, minifyEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
        textReport true
        textOutput 'stdout'
        fatal 'UnusedResources'
    }
}

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:gridlayout-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"

    // =================== Play services ===================
    // https://developers.google.com/android/guides/setup
    compile "com.google.android.gms:play-services-location:$gsmVersion"

    // https://github.com/excilys/androidannotations
    apt "org.androidannotations:androidannotations:$annotationsVersion"
    compile "org.androidannotations:androidannotations-api:$annotationsVersion"

    // =================== UI ===================
    // https://github.com/chrisjenx/Calligraphy
    compile 'uk.co.chrisjenx:calligraphy:2.1.0@aar'
    // http://joanzapata.com/android-iconify/
    compile "com.joanzapata.iconify:android-iconify-fontawesome:$iconifyVersion"

    compile "com.github.bumptech.glide:glide:$glideVersion"
    compile "com.github.bumptech.glide:okhttp-integration:1.3.1"


    compile 'com.mcxiaoke.volley:library:1.0.19'

    //
    // =================== Debug ===================
    compile 'com.orhanobut:logger:1.11'
    // https://github.com/square/leakcanary
    // compile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    // RELEASE: uncomment this and comment out the former one
    // compile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // TODO: just for FastDateFormat class? RnD to remove this lib
    compile "org.apache.commons:commons-lang3:$commonslangVersion"

    // =================== Parse ===================
    // https://github.com/ParsePlatform/Parse-SDK-Android
    compile 'com.parse:parse-android:1.11.0'
    compile 'com.parse.bolts:bolts-android:1.3.0'

    // =================== Fabric ===================
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile('com.digits.sdk.android:digits:1.9.2@aar') {
        transitive = true;
    }

    compile "de.greenrobot:eventbus:$eventbusVersion"

    // realm.io/docs/java/latest/
    compile 'io.realm:realm-android:0.87.2'

    compile 'com.google.code.gson:gson:1.7.1'

    // http://mvnrepository.com/artifact/com.facebook.android/facebook-android-sdk
    compile 'com.facebook.android:facebook-android-sdk:4.9.0'
}

apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
        // RELEASE: make it false
        // trace 'true'
    }
}

// Acknowledgement
// https://github.com/vlonjatg/progress-activity

// RELEASE: Image compression with ImageOptim
